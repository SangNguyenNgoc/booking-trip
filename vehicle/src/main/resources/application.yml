server:
  port: 8084

spring:
  application:
    name: vehicle
  datasource:
    driverClassName: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${MYSQL_HOST}:${MYSQL_PORT}/vehicle
    username: ${MYSQL_USER}
    password: ${MYSQL_PASS}
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${AUTH_URL}

  servlet:
    multipart:
      max-file-size: 5MB
      max-request-size: 5MB
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: false
        dialect: org.hibernate.dialect.MySQL8Dialect
        jdbc:
          batch_size: 50
  kafka:
    bootstrap-servers: ${BOOTSTRAP1}
    producer:
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: -1
      retries: 3
      properties:
        enable.idempotence: true
        request.timeout.ms: 30000
        max.in.flight.requests.per.connection: 5
    consumer:
      group-id: vehicle-consumer-group
      auto-offset-reset: earliest
      value-deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer


  cloud:
    openfeign:
      client:
        config:
          default:
            loggerLevel: BASIC

eureka:
  instance:
    hostname: ${EUREKA_HOST}
  client:
    service-url:
      defaultZone: ${EUREKA_DEFAULT_ZONE}

management:
  endpoints:
    web:
      exposure:
        include: info, health

url:
  base-url: ${SSL}://${DOMAIN}/api/v1
  auth-url: ${AUTH_DOMAIN}

internal-api-key:
  location: ${LOCATION_API_KEY}
  vehicle: ${VEHICLE_API_KEY}

